Bootstrap: docker
From: ubuntu:22.04
Stage: build


%arguments
    PY_VERSION=3.9-3.10-3.11-3.12
    GCC_VERSION=9

%setup
    # Download latest AOCL if it is not already in the current directory
    if [ ! -f ./*aocl*.tar.gz ]; then
        wget http://aocl.amd.com/data/latest/aocl-linux-aocc-latest.tar.gz
    fi
    if [ ! -f ./aocc*.tar.xz ]; then
        # Download from Jenkins if official AOCC not present ion the current directory
        wget http://atlvjksapp01.amd.com:8080/job/aocc_postsub_p/job/aocc_5_0_0_interim/739/artifact/lin/aocc-compiler-rel-5.0.0-4925-739.tar.xz
    fi

%files
    ./aocl*.tar.gz /amd/aocl/
    ./aocc*.tar.xz /amd/aocc/

%post
    apt update
    apt -y upgrade
    apt -y install software-properties-common
    add-apt-repository ppa:deadsnakes/ppa
    apt update
    apt -y install tzdata
    apt -y install git gcc-{{ GCC_VERSION }} g++-{{ GCC_VERSION }} xz-utils python3-pip patchelf

    # Install all required python versions in PY_VERSION ('-' separated list of version numbers)
    # create a virtual environment for each and install the required packages
    for ver in $(echo {{ PY_VERSION }} | sed "s/-/ /g")
    do
        apt -y install python${ver}  python${ver}-venv libpython${ver}-dev
        python${ver} -m venv /amd/python${ver}-env
        . /amd/python${ver}-env/bin/activate
        python -m ensurepip --upgrade
        pip install build

        python -m pip install \
            pybind11 \
            numpy \
            wheel \
            pytest \
            scikit-learn \
            pylint \
            sphinxcontrib.bibtex \
            breathe \
            sphinx_collapse \
            rocm-docs-core==0.34.2
        python -m pip install cmake --upgrade
        deactivate
    done

    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-{{ GCC_VERSION }} 99
    update-alternatives --set cc /usr/bin/gcc
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-{{ GCC_VERSION }} 99
    update-alternatives --set c++ /usr/bin/g++

    # Install the latest versions of AOCL
    cd /amd/aocl/
    tar -xf ./aocl*.tar.gz
    aocl_dir=$(ls -d aocl*/)
    cd $aocl_dir
    ./install.sh -t /amd/aocl -l sparse blis libflame utils
    cd ..
    rm -r aocl*.tar.gz ./$aocl_dir
    aocl_install=$(ls -d */)
    . $aocl_install/aocc/amd-libs.cfg

    # Install latest aocc
    cd /amd/aocc
    aocc_tar=$(ls aocc*.tar* | head -1)
    tar -xf ./$aocc_tar
    aocc_dir=$(ls -d aocc*/)
    cd $aocc_dir
    bash install.sh
    . /amd/aocc/setenv_AOCC.sh

%environment
    # AOCC env
    . /amd/aocc/setenv_AOCC.sh
    # AOCL env
    aocl_dir=$(ls -d /amd/aocl/*)
    gcc --version
    . $aocl_dir/aocc/amd-libs.cfg
    # List all python virtual environments
    echo "Available Python environments:"
    for dir in /amd/python*
    do
        echo ". ${dir}/bin/activate"
    done

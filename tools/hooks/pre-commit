#!/bin/bash
# Copyright (C) 2023 Advanced Micro Devices, Inc. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its contributors
#    may be used to endorse or promote products derived from this software without
#    specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
# OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# 

STYLE=$(git config --get hooks.clangformat.style)
if [ -n "${STYLE}" ] ; then
  STYLEARG="-style=${STYLE}"
else
  STYLEARG=""
fi

FILES_POLISHED=0

check_format_file() {
  file="${1}"
  if [ -f $file ]; then
    # clang-format -i ${STYLEARG} ${1}
    TEMP=`mktemp`
    clang-format ${STYLEARG} ${1} > $TEMP
    diff -q ${1} ${TEMP} &> /dev/null
    ret=$?
    rm ${TEMP}
    if [ "$ret" -ne 0 ] ; then
      echo clang-format: File "${1}" is NOT polished
      FILES_POLISHED=1
    fi
    # git add ${1}
  fi
}

case "${1}" in
  --about )
    echo "Runs clang-format on source files does not modify commited sources"
    ;;
  * )
    for file in `git diff-index --cached --name-only HEAD | grep -iE '\.(cpp|cc|h|hpp)$' ` ; do
      check_format_file "${file}"
    done
    if [ "$FILES_POLISHED" -ne 0 ] ; then
      echo "Try polishing files using clang-format prior to git commit"
      echo -e "\nCOMMIT ABORTED: file(s) require(s) polishing\n"
    fi
    ;;
esac

exit $FILES_POLISHED
